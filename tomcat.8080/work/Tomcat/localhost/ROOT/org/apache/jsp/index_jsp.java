/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2019-06-06 14:10:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".background-img {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\tbottom: 10px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!--  <p style=\"text-align: center\">\r\n");
      out.write("\t\t<img\r\n");
      out.write("\t\t\tsrc=\"C:\\Users\\Zahra\\Desktop\\Eclipse-for-network\\Workspace\\Red-Alert\\logo.jpg\" />\r\n");
      out.write("\t</p>\r\n");
      out.write("-->\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<Strong><font size=\"8\"> Homomorphic Encryption </font></Strong>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<Strong><font size=\"3\"> Encryption </font></Strong>\r\n");
      out.write("\t<br /> Use this link to Encrypt all incoming files.\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t \t<form method=\"post\" action=\"Encryption\" enctype=\"multipart/form-data\" name=\"form1\" id=\"form1\">\r\n");
      out.write("\t\t\tSelect a file: <input type=\"file\" name=\"file\" accept=\".txt\" id=\"file\" multiple/>\r\n");
      out.write(" <input name=\"submit\" type=\"submit\" value=\"Encrypt\" />\r\n");
      out.write("\t\t\t");

				String login_msge = (String) request.getAttribute("messa");
			//   out.println("<font color=red size=4px>" + login_msge+ "</font>");
				//if (login_msg != null)
				if (login_msge == "Invalid") {
					out.println("<font color=red size=4px>" + "Invalid File/Folder" + login_msge+ "</font>");
				}
				if (login_msge == "Valid") {
					out.println("<font color=red size=4px>" + "File Successfully Encrypted" + "</font>");
				}
				//	else
				//		{out.println("<font color=red size=4px>" + "Cool you are there" + "</font>");}
			
      out.write("\r\n");
      out.write("\t\t</form>   \r\n");
      out.write("\t<!-- \t<a href=\"DownloadServlet\">Click to Download to Anonymized file</a>   -->\r\n");
      out.write("\t\t</center>\r\n");
      out.write("<br />\r\n");
      out.write("\t<Strong><font size=\"3\"> Upload </font></Strong>\r\n");
      out.write("\t<br /> Use this link to upload files\r\n");
      out.write("\t\t<center>\r\n");
      out.write("\t\r\n");
      out.write("<!-- \t\t<form action=\"http://localhost:8080/uploadFile\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<label for=\"file\"> Select a file:</label>\r\n");
      out.write("\t\t<input type=\"file\" name=\"file\" multiple id=\"file\"/> <br>\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<input type=\"submit\" value=\"upload\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" <form id='file-catcher'>\r\n");
      out.write(" <br />\r\n");
      out.write("\t\t<label for=\"file\"> Select a file:</label>\r\n");
      out.write("  <input id='file-input' type='file' multiple/>\r\n");
      out.write(" <button type='submit'>\r\n");
      out.write("    Submit\r\n");
      out.write("  </button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<div id='file-list-display'></div>\r\n");
      out.write("<script>\r\n");
      out.write(" (function () {\r\n");
      out.write("\tvar fileCatcher = document.getElementById('file-catcher');\r\n");
      out.write("  var fileInput = document.getElementById('file-input');\r\n");
      out.write("  var fileListDisplay = document.getElementById('file-list-display');\r\n");
      out.write("  \r\n");
      out.write("  var fileList = [];\r\n");
      out.write("  var renderFileList, sendFile;\r\n");
      out.write("  \r\n");
      out.write("  fileCatcher.addEventListener('submit', function (evnt) {\r\n");
      out.write("  \tevnt.preventDefault();\r\n");
      out.write("    fileList.forEach(function (file) {\r\n");
      out.write("    \tsendFile(file);\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  fileInput.addEventListener('change', function (evnt) {\r\n");
      out.write(" \t\tfileList = [];\r\n");
      out.write("  \tfor (var i = 0; i < fileInput.files.length; i++) {\r\n");
      out.write("    \tfileList.push(fileInput.files[i]);\r\n");
      out.write("    }\r\n");
      out.write("    renderFileList();\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  renderFileList = function () {\r\n");
      out.write("  \tfileListDisplay.innerHTML = '';\r\n");
      out.write("    fileList.forEach(function (file, index) {\r\n");
      out.write("    \tvar fileDisplayEl = document.createElement('p');\r\n");
      out.write("      fileDisplayEl.innerHTML = (index + 1) + ': ' + file.name;\r\n");
      out.write("      fileListDisplay.appendChild(fileDisplayEl);\r\n");
      out.write("    });\r\n");
      out.write("  };\r\n");
      out.write("  \r\n");
      out.write("  sendFile = function (file) {\r\n");
      out.write("  \tvar formData = new FormData();\r\n");
      out.write("    var request = new XMLHttpRequest();\r\n");
      out.write(" \r\n");
      out.write("    formData.set('file', file);\r\n");
      out.write("    request.open(\"POST\", 'http://localhost:8080/uploadFile');\r\n");
      out.write("    request.send(formData);\r\n");
      out.write("  };\r\n");
      out.write("})();\r\n");
      out.write("</script> \r\n");
      out.write(" \r\n");
      out.write("\t</center>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"background-img\" class=\"background-img\">\r\n");
      out.write("\t\t<img\r\n");
      out.write("\t\t\tsrc=\"FortikaLogo.jpg\"\r\n");
      out.write("\t\t\twidth=\"140\" height=\"90\" />\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<Strong><font size=\"3\"> Search </font></Strong>\r\n");
      out.write("\t<br /> Enter the Keyword that you need to search\r\n");
      out.write("\t<center>\r\n");
      out.write("\t<form method=\"post\" action=\"SearchFormation\">\r\n");
      out.write("  Enter Keyword:\r\n");
      out.write("  <input type=\"text\" name=\"firstname\" >\r\n");
      out.write("  <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("  <br />\r\n");
      out.write("  \t\t\t");

			//requestt.setAttribute("messaa","Valid");
				String login_msge21 = (String) request.getAttribute("messaa");
				//requestt.setAttribute("responseData", resp);
				String ResponseMessage = (String) request.getAttribute("responseData");
				//if (login_msg != null)
				if (login_msge21 == "Invalid") {
					out.println("<font color=red size=4px>" + "No Files found having this search request" + "</font>" );
				}
				if (login_msge21 == "Valid") {
					out.println("<font color=red size=4px>" + "The Search was conducted Successfully and resulted in:" + "</font>");
									
				//	out.println("<font color=red size=4px>" + ResponseMessage + "</font>");
				}
				//	else
				//		{out.println("<font color=red size=4px>" + "Cool you are there" + "</font>");}
			
      out.write("\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t");
	if (login_msge21 == "Valid") {
								
					out.println("<font color=red size=4px>" + ResponseMessage + "</font>");
				}   
      out.write("\r\n");
      out.write("</form> \r\n");
      out.write("</center>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t\r\n");
      out.write("\t<Strong><font size=\"3\"> Download </font></Strong>\r\n");
      out.write("\t<br /> Enter the file name that you need to be downloaded\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\r\n");
      out.write("\t<form id = \"your_form\" onsubmit=\"yourFunction()\">\r\n");
      out.write("  <label>File name:  <input type=\"text\" name=\"keywords\">\r\n");
      out.write("    <input type=\"submit\" value=\"Download\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write(" function yourFunction(){\r\n");
      out.write("    var action_src = \"http://localhost:8080/downloadFile/\" + document.getElementsByName(\"keywords\")[0].value;\r\n");
      out.write("    var your_form = document.getElementById('your_form');\r\n");
      out.write("    your_form.action = action_src ;\r\n");
      out.write("}\r\n");
      out.write(" </script>\r\n");
      out.write("\r\n");
      out.write("\t</center>\r\n");
      out.write("\r\n");
      out.write("<Strong><font size=\"3\"> Decrypt </font></Strong>\r\n");
      out.write("\t<br /> Select the files that you want to decrypt\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<form method=\"post\" action=\"upload2\" enctype=\"multipart/form-data\" name=\"form1\" id=\"form1\">\r\n");
      out.write("\t\t\tSelect a file: <input type=\"file\" name=\"file\" accept=\".txt\" id=\"file\" multiple/>\r\n");
      out.write(" <input name=\"submit\" type=\"submit\" value=\"Decrypt\" />\r\n");
      out.write("\t\t\t");

				String login_msgeee = (String) request.getAttribute("messa212");
			//   out.println("<font color=red size=4px>" + login_msge+ "</font>");
				//if (login_mseeg != null)
				if (login_msgeee == "Invalid") {
					out.println("<font color=red size=4px>" + "Invalid File/Folder" + login_msge+ "</font>");
				}
				if (login_msgeee == "Valid") {
					out.println("<font color=red size=4px>" + "File Successfully Decrypted" + "</font>");
				}
				//	else
				//		{out.println("<font color=red size=4px>" + "Cool you are there" + "</font>");}
			
      out.write("\r\n");
      out.write("\t\t</form>   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
